name: Nightly Build

on:
  schedule:
    - cron: '0 0 * * *' # Runs at 00:00 UTC every day
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check for changes since the latest release
        id: check_changes
        uses: actions/github-script@v7
        with:
          script: |
            const latestRelease = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const lastReleaseDate = new Date(latestRelease.data.created_at);
            const response = await github.rest.repos.compareCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: lastReleaseDate.toISOString(),
              head: 'main'
            });
            if (response.data.status !== 'identical') {
              core.setOutput('changes', true);
            } else {
              core.setOutput('changes', false);
            }
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 17
        if: steps.check_changes.outputs.changes == 'true'
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Get today's date
        if: steps.check_changes.outputs.changes == 'true'
        run: echo "TODAYS_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Build APK
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          ./gradlew assembleRelease
          cp app/build/outputs/apk/release/app-release.apk app-release-${{ env.TODAYS_DATE }}.apk

      - name: Zip APK
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          mkdir build
          zip -r build/app-release-${{ env.TODAYS_DATE }}.zip app-release-${{ env.TODAYS_DATE }}.apk

      - name: Create Release
        if: steps.check_changes.outputs.changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_COUNT=$(gh release list --repo "$GITHUB_REPOSITORY" | grep "${{ env.TODAYS_DATE }}" | wc -l)
          NEW_VERSION=$((RELEASE_COUNT + 1))
          gh release create "nightly-${{ env.TODAYS_DATE }}-v${NEW_VERSION}" \
              --repo "$GITHUB_REPOSITORY" \
              --title "Nightly Build ${{ env.TODAYS_DATE }} v${NEW_VERSION}" \
              --notes "Automated release for ${{ env.TODAYS_DATE }} version ${NEW_VERSION}" \
              --generate-notes \
              "./app-release-${{ env.TODAYS_DATE }}.apk" \
              "./build/app-release-${{ env.TODAYS_DATE }}.zip"
